name: Run Tests

on:
  push:
    branches:
      - alpha
env:
  MAIL_URL_FORGOT_PASSWORD: 'http://localhost:3000/reset-password'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Debug Workflow Run
        run: |
          echo "Workflow: ${{ github.workflow }}"
          echo "Workflow Run Job: ${{ github.job }}"
          echo "Workflow Run Ref: ${{ github.ref }}"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  e2e-tests:
    name: E2E Tests
    needs: unit-tests
    if: ${{ needs.unit-tests.result == 'success' }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Debug Workflow Run
        run: |
          echo "Workflow: ${{ github.workflow }}"
          echo "Workflow Run Job: ${{ github.job }}"
          echo "Workflow Run Ref: ${{ github.ref }}"

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          DATABASE_URL: 'postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}'
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
          MAIL_API_KEY: ${{ secrets.MAIL_API_KEY }}

  notify-release:
    name: Notify Release
    needs: e2e-tests
    if: ${{ needs.e2e-tests.result == 'success' }}
    permissions:
      contents: write
      actions: write

    runs-on: ubuntu-latest

    steps:
      - name: Trigger Release Workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Release
